let express,connectDatabase,check,validationResult,cors;_f83‍.w("express",[["default",["express"],function(v){express=v}]]);_f83‍.w("./config/db",[["default",["connectDatabase"],function(v){connectDatabase=v}]]);_f83‍.w("express-validator",[["check",["check"],function(v){check=v}],["validationResult",["validationResult"],function(v){validationResult=v}]]);_f83‍.w("cors",[["default",["cors"],function(v){cors=v}]]);



//Initialize express application
const app = express();
//Connect Database
connectDatabase();

//Configure MiddleWare
app.use(express.json({extended:false}));
app.use(
    cors({
        origin: 'http://localhost:3000'
    })
);

//API endpoints
/**
 * @route GET/
 * @desc Test endpoint
 */
app.get('/', (req, res) =>
    res.send('http get request sent to root api endpoint')
);

/**
 * @route POST api/users
 * @desc Register user
 */

app.post(
    '/api/users',
    [
        check('name', 'Please enter your name').not().isEmpty(),
        check('email', 'Please enter a valid email').isEmail(),
        check('password', 'Please enter a password with 6 or more characters').isLength({min:6})

    ],
        (req, res)=> {
            const errors = validationResult(req);
            if(!errors.isEmpty()){
                return res.status(422).json({errors: errors.array()});
            }else{
                return res.send(req.body);
            }
    
});

//Connection listener 
const port = 5000;
app.listen(port, () => console.log (`Express server running on port ${port}`));